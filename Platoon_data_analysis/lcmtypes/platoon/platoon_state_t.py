"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

import lcmtypes.platoon.platoon_member_state_t

class platoon_state_t(object):
    __slots__ = ["utime", "ego_id", "leader_id", "target_spacing", "number_of_vehicles", "platoon_member"]

    def __init__(self):
        self.utime = 0
        self.ego_id = 0
        self.leader_id = 0
        self.target_spacing = 0.0
        self.number_of_vehicles = 0
        self.platoon_member = []

    def encode(self):
        buf = BytesIO()
        buf.write(platoon_state_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">qhhdh", self.utime, self.ego_id, self.leader_id, self.target_spacing, self.number_of_vehicles))
        for i0 in range(self.number_of_vehicles):
            assert self.platoon_member[i0]._get_packed_fingerprint() == lcmtypes.platoon.platoon_member_state_t._get_packed_fingerprint()
            self.platoon_member[i0]._encode_one(buf)

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != platoon_state_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return platoon_state_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = platoon_state_t()
        self.utime, self.ego_id, self.leader_id, self.target_spacing, self.number_of_vehicles = struct.unpack(">qhhdh", buf.read(22))
        self.platoon_member = []
        for i0 in range(self.number_of_vehicles):
            self.platoon_member.append(lcmtypes.platoon.platoon_member_state_t._decode_one(buf))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if platoon_state_t in parents: return 0
        newparents = parents + [platoon_state_t]
        tmphash = (0xcf753445d9d7ca00+ lcmtypes.platoon.platoon_member_state_t._get_hash_recursive(newparents)) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if platoon_state_t._packed_fingerprint is None:
            platoon_state_t._packed_fingerprint = struct.pack(">Q", platoon_state_t._get_hash_recursive([]))
        return platoon_state_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

