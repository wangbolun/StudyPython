"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class gps_imu_info_t(object):
    __slots__ = ["utime", "longitude", "latitude", "altitude", "yaw", "roll", "pitch", "yawRate", "velocityNorth", "velocityEast", "velocityDown", "accelerationLongitudinal", "accelerationLateral", "acceleration", "velocity", "locationStatus", "confidenceLevel", "yawEstimate", "longitudeEstimate", "latitudeEstimate", "satelliteNumber"]

    def __init__(self):
        self.utime = 0
        self.longitude = 0.0
        self.latitude = 0.0
        self.altitude = 0.0
        self.yaw = 0.0
        self.roll = 0.0
        self.pitch = 0.0
        self.yawRate = 0.0
        self.velocityNorth = 0.0
        self.velocityEast = 0.0
        self.velocityDown = 0.0
        self.accelerationLongitudinal = 0.0
        self.accelerationLateral = 0.0
        self.acceleration = 0.0
        self.velocity = 0.0
        self.locationStatus = 0.0
        self.confidenceLevel = 0.0
        self.yawEstimate = 0.0
        self.longitudeEstimate = 0.0
        self.latitudeEstimate = 0.0
        self.satelliteNumber = 0

    def encode(self):
        buf = BytesIO()
        buf.write(gps_imu_info_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">qddfffffffffffffffddh", self.utime, self.longitude, self.latitude, self.altitude, self.yaw, self.roll, self.pitch, self.yawRate, self.velocityNorth, self.velocityEast, self.velocityDown, self.accelerationLongitudinal, self.accelerationLateral, self.acceleration, self.velocity, self.locationStatus, self.confidenceLevel, self.yawEstimate, self.longitudeEstimate, self.latitudeEstimate, self.satelliteNumber))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != gps_imu_info_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return gps_imu_info_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = gps_imu_info_t()
        self.utime, self.longitude, self.latitude, self.altitude, self.yaw, self.roll, self.pitch, self.yawRate, self.velocityNorth, self.velocityEast, self.velocityDown, self.accelerationLongitudinal, self.accelerationLateral, self.acceleration, self.velocity, self.locationStatus, self.confidenceLevel, self.yawEstimate, self.longitudeEstimate, self.latitudeEstimate, self.satelliteNumber = struct.unpack(">qddfffffffffffffffddh", buf.read(102))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if gps_imu_info_t in parents: return 0
        tmphash = (0x3d1138af74bcb4c7) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if gps_imu_info_t._packed_fingerprint is None:
            gps_imu_info_t._packed_fingerprint = struct.pack(">Q", gps_imu_info_t._get_hash_recursive([]))
        return gps_imu_info_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

